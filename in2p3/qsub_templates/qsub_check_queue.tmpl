#!/bin/bash

. {vigiechiro_dir}/init.env

### Name with env
#$ -N cq-{env_name}

### Merge stdout et stderr in a single file
#$ -j y

### Log into sps drive
#$ -l sps=1
#$ -o {vigiechiro_dir}/{env_name}-logs

### Start as daemon
#$ -q demon -l demon=1


function get_scheduled_workers() {{
    echo 'import subprocess
count = 0
job_name = "w-{env_name}"
jobs = subprocess.check_output("qstat").decode().split("\n")[2:]
for job in jobs:
    job_fields = [x for x in job.split() if x]
    if not job_fields:
        continue
    if not job_name.startswith(job_fields[2]):
        continue
    if job_fields[4] == "qw":
        count += 1
print(count)
' | python
}}


# Run the script for 60 * 600 == 10 hours
for i in `seq 600`
do
    PENDINGS=`python {vigiechiro_dir}/vigiechiro-api/bin/queuer.py pendings`
    SCHEDULED_WORKERS=`get_scheduled_workers`
    NEEDED_TO_START=$(($PENDINGS - $SCHEDULED_WORKERS))
    if ( [ "$NEEDED_TO_START" -gt 0 ] )
    then
        printf "[$(date)] $PENDINGS pending jobs, starting worker\n"
        qsub {vigiechiro_dir}/qsub_worker.sh
    else
        printf "[$(date)] no pending jobs\n"
    fi
    sleep 60
done

# Then reload itself to prevent beeing killed by quotas
# note: Couldn't use $(readlink -f $0) given qsub copy the
# script in a temp folder before running it
echo "[$(date)] restarting daemon"
qsub {vigiechiro_dir}/qsub_check_queue.sh
